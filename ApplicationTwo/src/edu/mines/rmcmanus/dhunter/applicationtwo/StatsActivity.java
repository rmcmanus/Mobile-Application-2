/**
 * Description: This class shows the statistics of the selected player from the {@link SelectPlayerActivity}
 * or a new page generated by the {@link AddPlayerActivity} class.  This displays a page based on
 * what type of position the player plays.  Allows for stats update when the "Update" button
 * is pressed.  This functionality will be included in the final submission, for now there is 
 * dummy data.
 * 
 * @author Ryan McManus, David Hunter
 */


package edu.mines.rmcmanus.dhunter.applicationtwo;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class StatsActivity extends Activity {

	public EditText stat1;
	public EditText stat2;
	public EditText stat3;
	public EditText stat4;
	public EditText stat5;
	public EditText stat6;
	public EditText[] editArray;
	
	public Button updateDoneButton;
	public boolean doneEditing = false;
	public String playerName = "", playerNumber = "", playerPosition = "", playerBats = "", playerThrows = "";
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_stats);
		
		//grabs the player name and number from the previous activity
		Intent intent = getIntent();
		boolean selectPassed = intent.getBooleanExtra(SelectPlayerActivity.EXTRA_SELECT_PLAYER_PASSED, false);
		boolean addPassed = intent.getBooleanExtra(AddPlayerActivity.EXTRA_ADD_PLAYER_PASSED, false);
		if (selectPassed) {
			playerName = intent.getStringExtra(SelectPlayerActivity.EXTRA_PLAYER_NAME);
			playerNumber = intent.getStringExtra(SelectPlayerActivity.EXTRA_PLAYER_NUMBER);
		}
		else if (addPassed) {
			playerName = intent.getStringExtra(AddPlayerActivity.EXTRA_PLAYER_NAME);
			playerNumber = intent.getStringExtra(AddPlayerActivity.EXTRA_PLAYER_NUMBER);
			playerPosition = intent.getStringExtra(AddPlayerActivity.EXTRA_PLAYER_POSITION);
			playerBats = intent.getStringExtra(AddPlayerActivity.EXTRA_PLAYER_BATS);
			playerThrows = intent.getStringExtra(AddPlayerActivity.EXTRA_PLAYER_THROWS);
			TextView playerPositionView = (TextView) findViewById(R.id.position_text_view);
			playerPositionView.setText(playerPosition);
			TextView playerBatsThrowsView = (TextView) findViewById(R.id.throws_bats_text_view);
			playerBatsThrowsView.setText(playerThrows.toCharArray()[0] + "/" + playerBats.toCharArray()[0]);
		}
		TextView playerNameView = (TextView) findViewById(R.id.player_label);
		TextView playerNumberView = (TextView) findViewById(R.id.number_text_view);
		//Sets the player name and number
		playerNameView.setText(playerName);
		playerNumberView.setText("#" + playerNumber);
		
		//gets each edit text view for holding stats
		stat1 = (EditText) findViewById(R.id.stat_1_text_view);
		stat2 = (EditText) findViewById(R.id.stat_2_text_view);
		stat3 = (EditText) findViewById(R.id.stat_3_text_view);
		stat4 = (EditText) findViewById(R.id.stat_4_text_view);
		stat5 = (EditText) findViewById(R.id.stat_5_text_view);
		stat6 = (EditText) findViewById(R.id.stat_6_text_view);
		//puts each edit text into an array
		editArray = new EditText[6];
		editArray[0] = stat1;
		editArray[1] = stat2;
		editArray[2] = stat3;
		editArray[3] = stat4;
		editArray[4] = stat5;
		editArray[5] = stat6;
		//gets the update button
		updateDoneButton = (Button) findViewById(R.id.stats_update_button);
		//calls the function to disable all of the edit text views
		makeDisabled();
		
		checkPlayerPosition(playerPosition);
	}
	
	/**
	 * This function iterated through each of the edit text views and disables them so that
	 * the user cannot edit the values.
	 */
	public void makeDisabled() {
		for (EditText e : editArray) {
			e.setEnabled(false);
		}
	}
	
	/**
	 * This function iterated though each of the edit text views and enables them so that
	 * the user can edit the values.
	 */
	public void makeEnabled() {
		for (EditText e : editArray) {
			e.setEnabled(true);
		}
	}
	
	/**
	 * This function is called when the update/done button is pressed.  It determines if the
	 * edit text views should be editable or not, and changes the text of the button from
	 * update to done if the user is in edit mode.
	 * 
	 * @param v
	 */
	public void update(View v) {
		//If the user is done editing, then change the text of the button to update and
		//disable the edit texts
		if (doneEditing) {
			makeDisabled();
			updateDoneButton.setText(getString(R.string.update));
			doneEditing = false;
		} 
		//If the user is in not in edit mode and the button is press, change the text of the
		//button to done and enable the edit text boxes for editing.
		else {
			makeEnabled();
			updateDoneButton.setText(getString(R.string.done_button));
			doneEditing = true;
		}
	}
	
	/**
	 * This function grabs every TextView that is on the stats page of a player, and changes the heading based on which
	 * position that player plays. If the player is a pitcher, then the view updates with pitcher-specific information
	 * populated by our database (final release). These include IP, W/L, SO, etc. Otherwise it changes the headings for
	 * fielder, which include HR, R, H, AVG, etc. These are also populated by our database (final release).
	 * 
	 * @param playerPosition	Current player position defined either by a new player being added or in selecting a player
	 */
	public void checkPlayerPosition(String playerPosition) {
		TextView col1 = (TextView) findViewById(R.id.col_1_text_view);
		TextView col2 = (TextView) findViewById(R.id.col_2_text_view);
		TextView col3 = (TextView) findViewById(R.id.col_3_text_view);
		TextView col4 = (TextView) findViewById(R.id.col_4_text_view);
		TextView col5 = (TextView) findViewById(R.id.col_5_text_view);
		TextView col6 = (TextView) findViewById(R.id.col_6_text_view);
		
		if (playerPosition.equals(getString(R.string.pitcher_test))) {
			col1.setText(getString(R.string.pitcher_ip));
			col2.setText(getString(R.string.pitcher_w));
			col3.setText(getString(R.string.pitcher_l));
			col4.setText(getString(R.string.pitcher_era));
			col5.setText(getString(R.string.pitcher_so));
			col6.setText(getString(R.string.pitcher_whip));
		}
		else {
			col1.setText(getString(R.string.fielder_ab));
			col2.setText(getString(R.string.fielder_r));
			col3.setText(getString(R.string.fielder_h));
			col4.setText(getString(R.string.fielder_hr));
			col5.setText(getString(R.string.fielder_rbi));
			col6.setText(getString(R.string.fielder_avg));
		}
	}
}
